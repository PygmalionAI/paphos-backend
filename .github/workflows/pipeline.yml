name: Pygmalion Paphos Back End

permissions:
  # This is required for actions/checkout
  contents: read 

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:   

env:
  go-version: '1.19.1'
  buffalo-cli-version: '0.18.13'
  #PostgreSQL Credentials
  PGUSER: paphos
  PGPASSWORD: paphos

jobs:
  # Label of the container job
  dependencies:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # PostgreSQL as Service Container - Directly on the Runner without a Container, since a container seems to cause issues with buffalo install
    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{  env.PGUSER  }}
          POSTGRES_PASSWORD: ${{  env.PGPASSWORD  }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{  env.go-version  }}
        
      - name: Install Buffalo
        run: |
          wget https://github.com/gobuffalo/cli/releases/download/v0.18.13/buffalo_${{  env.buffalo-cli-version  }}_Linux_x86_64.tar.gz
          tar -xvzf buffalo_${{  env.buffalo-cli-version  }}_Linux_x86_64.tar.gz
          sudo mv buffalo /usr/local/bin/buffalo
          
      - name: Install Buffalo pop plugin
        run: buffalo plugins install

      - name: Go Version
        run: go version

      - name: Buffalo Version
        run: buffalo version
      
      - name: Buffalo Pop - Create Database
        run: buffalo pop create -a

      - name: Buffalo Build
        run: buffalo build

      - name: Buffalo Tests / Generate Coverage Report
        run: buffalo test -coverprofile=c.out ./...

      - name: Convert Coverage Report to be Human Readable
        if: success() || failure() # Always run, including if earlier steps failed
        run: go tool cover -html c.out -o coverage_report.html

      - name: Upload Coverage Report as Artifact
        if: success() || failure() # Always run, including if earlier steps failed
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-report
          path: ./coverage_report.html

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && (success() || failure())
        with:
          recreate: true
          path: coverage_report.html

      - name: Write to Job Summary
        if: success() || failure() # Always run, including if earlier steps failed
        run: links coverage_report.html >> $GITHUB_STEP_SUMMARY