name: Pygmalion Paphos Back End

permissions:
  # Read is required for actions/checkout / Write is required for publishing test report artifact to Github Pages
  contents: write

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:   

env:
  buffalo-cli-version: '0.18.13'
  #PostgreSQL Credentials
  PGUSER: paphos
  PGPASSWORD: paphos

jobs:
  paphos-backend-tests:
    runs-on: ubuntu-latest

    # PostgreSQL as Service Container - Directly on the Runner without a Container, since a container seems to cause issues with buffalo install
    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{  env.PGUSER  }}
          POSTGRES_PASSWORD: ${{  env.PGPASSWORD  }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Checkout GH Pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: public

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'
          cache: true

      - name: Buffalo - Get Previously Cached Install & Dependencies
        # cache is automatically saved after this job completes
        id: buffalo-cache-step
        uses: actions/cache@v3
        with:
          path: '/usr/local/bin/buffalo'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/config/buffalo-plugins.toml') }}
        
      - name: Install Buffalo
        if: steps.buffalo-cache-step.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/gobuffalo/cli/releases/download/v0.18.13/buffalo_${{  env.buffalo-cli-version  }}_Linux_x86_64.tar.gz
          tar -xvzf buffalo_${{  env.buffalo-cli-version  }}_Linux_x86_64.tar.gz
          sudo mv buffalo /usr/local/bin/buffalo

      - name: Install Buffalo pop plugin
        run: buffalo plugins install

      - name: test
        run: buffalo plugins list